<?php

/**
 * BaseModelProject
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $name_jp
 * @property string $description
 * @property string $poster
 * @property string $mini_poster
 * @property enum $status
 * @property enum $private
 * @property Doctrine_Collection $ProjectUser
 * @property Doctrine_Collection $ProjectLeader
 * @property Doctrine_Collection $ProjectScreenshot
 * @property Doctrine_Collection $ProjectEpisode
 * 
 * @package    FansubCMS
 * @subpackage Models
 * @author     FansubCMS Developer <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseModelProject extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('projects');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'notnull' => true,
             ));
        $this->hasColumn('name_jp', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 60000, array(
             'type' => 'string',
             'length' => 60000,
             ));
        $this->hasColumn('poster', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('mini_poster', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'planned',
              1 => 'progress',
              2 => 'pending',
              3 => 'completed',
              4 => 'dropped',
              5 => 'licensed',
             ),
             'notnull' => true,
             ));
        $this->hasColumn('private', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'yes',
              1 => 'no',
             ),
             'default' => 'yes',
             'notnull' => true,
             ));

        $this->option('type', 'InnoDB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ProjectUser', array(
             'local' => 'id',
             'foreign' => 'project_id'));

        $this->hasMany('ProjectLeader', array(
             'local' => 'id',
             'foreign' => 'project_id'));

        $this->hasMany('ProjectScreenshot', array(
             'local' => 'id',
             'foreign' => 'project_id'));

        $this->hasMany('ProjectEpisode', array(
             'local' => 'id',
             'foreign' => 'project_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}