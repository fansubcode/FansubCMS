<?php

/**
 * Projects_Model_Project
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    FansubCMS
 * @subpackage Models
 * @author     FansubCMS Dev Team <hikaru@fansubcode.org>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Projects_Model_Project extends Projects_Model_Base_Project
{
    const TYPE_SCANLATION = 'scanlation';
    const TYPE_FANSUB = 'fansub';
    
    private $_released;
    
    public function getReleasedEpisodes()
    {
        if (is_null($this->_released)) {
            $pet = Doctrine::getTable('Projects_Model_EpisodeRelease');
            $q = $pet->createQuery('er')
                    ->select('er.*, e.number as number, e.version as version, e.title as title')
                    ->leftJoin('er.Projects_Model_Episode e')
                    ->orderBy('e.number ASC, e.version ASC');
            $q->where('er.released_at IS NOT NULL')
                    ->andWhere('e.project_id = ?', $this->id);
            $this->_released = $q->fetchArray();
        }
        return $this->_released;
    }
    
    /**
     * Get count of released unique episodes
     * 
     * @return integer
     */
    public function getReleaseEpisodeCount()
    {
        $pet = Doctrine::getTable('Projects_Model_Episode');
        $q = $pet->createQuery('e')
                ->select('e.number')
                ->leftJoin('e.Projects_Model_EpisodeRelease er')
                ->where('er.released_at IS NOT NULL')
                ->andWhere('e.project_id = ?', $this->id)
                ->groupBy('e.number');

        return count($q->execute(array(), Doctrine_Core::HYDRATE_SCALAR));
    }
    
    public function updateProject (array $values)
    {
        if(!empty($this->Projects_Model_Leader))
            $this->Projects_Model_Leader->delete();
        
        if (! empty($values['name']))
            $this->name = $values['name'];
        if (! empty($values['name_jp']))
            $this->name_jp = $values['name_jp'];
        if (! empty($values['poster']))
            $this->poster = $values['poster'];
        if (! empty($values['mini_poster']))
            $this->mini_poster = $values['mini_poster'];
        if (! empty($values['description']))
            $this->description = $values['description'];
        if (! empty($values['status']))
            $this->status = $values['status'];
        if (! empty($values['private']))
            $this->private = $values['private'];
        if (! empty($values['episode_count']))
            $this->element_count = $values['episode_count'];
        else
            $this->element_count = null;
        
        $this->save();
        
        if (! empty($values['leaders'])) {
            foreach($values['leaders'] as $leaderId) {
                $model = new Projects_Model_Leader();
                $model->project_id = $this->id;
                $model->user_id = $leaderId;
                $model->save();
            }
        }
    }
    
    public function getLeaders() {
        $ret = array();
        foreach($this->Projects_Model_Leader as $leader) {
            $ret[] = $leader->user_id;
        }
        return $ret;
    }
}